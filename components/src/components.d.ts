/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Battle } from "./model/ehtc/battle";
import { FlightGroup, Message, Mission } from "./model/TIE";
import { Mission as Mission1 } from "./model/TIE/mission";
import { Briefing, Event, FileHeader, FlightGroup as FlightGroup1, GlobalGoal, GoalFG, Message as Message1, Mission as Mission2, Order, PostMissionQuestions, PreMissionQuestions, Tag, TIEString, Trigger, Waypt } from "./x/model/TIE";
import { FileHeader as FileHeader1, FlightGroup as FlightGroup2, Mission as Mission3, ObjectGroup, PilotFile } from "./model/XW";
export namespace Components {
    interface EhtcBattle {
        "battle": Battle;
        "code": string;
    }
    interface EhtcBattleCenter {
    }
    interface EhtcBattleSelect {
        "domain": string;
        "name": string;
        "value": string;
    }
    interface EhtcMemberSelect {
        "domain": string;
        "mode": "character" | "pilot";
        "name": string;
        "value": string;
    }
    interface EhtcPilot {
        "pin": number;
        "secondary": boolean;
    }
    interface PyriteMission {
        "file": string;
        "name": string;
        "nr": string;
        "plt": string;
        "sub": string;
    }
    interface PyriteMissionTabs {
    }
    interface PyriteMissionWrapper {
        "file": string;
    }
    interface PyritePilotFile {
        "bsf": string;
        "file": string;
    }
    interface PyriteResource {
        "name": string;
    }
    interface PyriteResources {
    }
    interface PyriteTieBriefing {
        "mission"?: Mission;
    }
    interface PyriteTieFlightgroup {
        "flightGroup": FlightGroup;
    }
    interface PyriteTieFlightgroups {
        "mission": Mission;
    }
    interface PyriteTieMessage {
        "message": Message;
    }
    interface PyriteTieMessages {
        "mission": Mission;
    }
    interface PyriteTieMission {
        "file": string;
    }
    interface PyriteTiePreMissionQuestions {
        "mission": Mission;
    }
    interface PyriteTieScore {
        "mission": Mission;
    }
    interface XpyriteTieBriefing {
        "briefing": Briefing;
    }
    interface XpyriteTieEvent {
        "event": Event;
    }
    interface XpyriteTieFileHeader {
        "fileheader": FileHeader;
    }
    interface XpyriteTieFlightGroup {
        "flightgroup": FlightGroup;
    }
    interface XpyriteTieGlobalGoal {
        "globalgoal": GlobalGoal;
    }
    interface XpyriteTieGoalFg {
        "goalfg": GoalFG;
    }
    interface XpyriteTieMessage {
        "message": Message;
    }
    interface XpyriteTieMission {
        "mission": Mission;
    }
    interface XpyriteTieOrder {
        "order": Order;
    }
    interface XpyriteTiePostMissionQuestions {
        "postmissionquestions": PostMissionQuestions;
    }
    interface XpyriteTiePreMissionQuestions {
        "premissionquestions": PreMissionQuestions;
    }
    interface XpyriteTieTag {
        "tag": Tag;
    }
    interface XpyriteTieTieString {
        "tiestring": TIEString;
    }
    interface XpyriteTieTrigger {
        "trigger": Trigger;
    }
    interface XpyriteTieWaypt {
        "waypt": Waypt;
    }
    interface XpyriteXwFileHeader {
        "fileheader": FileHeader;
    }
    interface XpyriteXwFlightGroup {
        "flightgroup": FlightGroup;
    }
    interface XpyriteXwMission {
        "mission": Mission;
    }
    interface XpyriteXwObjectGroup {
        "objectgroup": ObjectGroup;
    }
    interface XpyriteXwPilotFile {
        "pilotfile": PilotFile;
    }
}
declare global {
    interface HTMLEhtcBattleElement extends Components.EhtcBattle, HTMLStencilElement {
    }
    var HTMLEhtcBattleElement: {
        prototype: HTMLEhtcBattleElement;
        new (): HTMLEhtcBattleElement;
    };
    interface HTMLEhtcBattleCenterElement extends Components.EhtcBattleCenter, HTMLStencilElement {
    }
    var HTMLEhtcBattleCenterElement: {
        prototype: HTMLEhtcBattleCenterElement;
        new (): HTMLEhtcBattleCenterElement;
    };
    interface HTMLEhtcBattleSelectElement extends Components.EhtcBattleSelect, HTMLStencilElement {
    }
    var HTMLEhtcBattleSelectElement: {
        prototype: HTMLEhtcBattleSelectElement;
        new (): HTMLEhtcBattleSelectElement;
    };
    interface HTMLEhtcMemberSelectElement extends Components.EhtcMemberSelect, HTMLStencilElement {
    }
    var HTMLEhtcMemberSelectElement: {
        prototype: HTMLEhtcMemberSelectElement;
        new (): HTMLEhtcMemberSelectElement;
    };
    interface HTMLEhtcPilotElement extends Components.EhtcPilot, HTMLStencilElement {
    }
    var HTMLEhtcPilotElement: {
        prototype: HTMLEhtcPilotElement;
        new (): HTMLEhtcPilotElement;
    };
    interface HTMLPyriteMissionElement extends Components.PyriteMission, HTMLStencilElement {
    }
    var HTMLPyriteMissionElement: {
        prototype: HTMLPyriteMissionElement;
        new (): HTMLPyriteMissionElement;
    };
    interface HTMLPyriteMissionTabsElement extends Components.PyriteMissionTabs, HTMLStencilElement {
    }
    var HTMLPyriteMissionTabsElement: {
        prototype: HTMLPyriteMissionTabsElement;
        new (): HTMLPyriteMissionTabsElement;
    };
    interface HTMLPyriteMissionWrapperElement extends Components.PyriteMissionWrapper, HTMLStencilElement {
    }
    var HTMLPyriteMissionWrapperElement: {
        prototype: HTMLPyriteMissionWrapperElement;
        new (): HTMLPyriteMissionWrapperElement;
    };
    interface HTMLPyritePilotFileElement extends Components.PyritePilotFile, HTMLStencilElement {
    }
    var HTMLPyritePilotFileElement: {
        prototype: HTMLPyritePilotFileElement;
        new (): HTMLPyritePilotFileElement;
    };
    interface HTMLPyriteResourceElement extends Components.PyriteResource, HTMLStencilElement {
    }
    var HTMLPyriteResourceElement: {
        prototype: HTMLPyriteResourceElement;
        new (): HTMLPyriteResourceElement;
    };
    interface HTMLPyriteResourcesElement extends Components.PyriteResources, HTMLStencilElement {
    }
    var HTMLPyriteResourcesElement: {
        prototype: HTMLPyriteResourcesElement;
        new (): HTMLPyriteResourcesElement;
    };
    interface HTMLPyriteTieBriefingElement extends Components.PyriteTieBriefing, HTMLStencilElement {
    }
    var HTMLPyriteTieBriefingElement: {
        prototype: HTMLPyriteTieBriefingElement;
        new (): HTMLPyriteTieBriefingElement;
    };
    interface HTMLPyriteTieFlightgroupElement extends Components.PyriteTieFlightgroup, HTMLStencilElement {
    }
    var HTMLPyriteTieFlightgroupElement: {
        prototype: HTMLPyriteTieFlightgroupElement;
        new (): HTMLPyriteTieFlightgroupElement;
    };
    interface HTMLPyriteTieFlightgroupsElement extends Components.PyriteTieFlightgroups, HTMLStencilElement {
    }
    var HTMLPyriteTieFlightgroupsElement: {
        prototype: HTMLPyriteTieFlightgroupsElement;
        new (): HTMLPyriteTieFlightgroupsElement;
    };
    interface HTMLPyriteTieMessageElement extends Components.PyriteTieMessage, HTMLStencilElement {
    }
    var HTMLPyriteTieMessageElement: {
        prototype: HTMLPyriteTieMessageElement;
        new (): HTMLPyriteTieMessageElement;
    };
    interface HTMLPyriteTieMessagesElement extends Components.PyriteTieMessages, HTMLStencilElement {
    }
    var HTMLPyriteTieMessagesElement: {
        prototype: HTMLPyriteTieMessagesElement;
        new (): HTMLPyriteTieMessagesElement;
    };
    interface HTMLPyriteTieMissionElement extends Components.PyriteTieMission, HTMLStencilElement {
    }
    var HTMLPyriteTieMissionElement: {
        prototype: HTMLPyriteTieMissionElement;
        new (): HTMLPyriteTieMissionElement;
    };
    interface HTMLPyriteTiePreMissionQuestionsElement extends Components.PyriteTiePreMissionQuestions, HTMLStencilElement {
    }
    var HTMLPyriteTiePreMissionQuestionsElement: {
        prototype: HTMLPyriteTiePreMissionQuestionsElement;
        new (): HTMLPyriteTiePreMissionQuestionsElement;
    };
    interface HTMLPyriteTieScoreElement extends Components.PyriteTieScore, HTMLStencilElement {
    }
    var HTMLPyriteTieScoreElement: {
        prototype: HTMLPyriteTieScoreElement;
        new (): HTMLPyriteTieScoreElement;
    };
    interface HTMLXpyriteTieBriefingElement extends Components.XpyriteTieBriefing, HTMLStencilElement {
    }
    var HTMLXpyriteTieBriefingElement: {
        prototype: HTMLXpyriteTieBriefingElement;
        new (): HTMLXpyriteTieBriefingElement;
    };
    interface HTMLXpyriteTieEventElement extends Components.XpyriteTieEvent, HTMLStencilElement {
    }
    var HTMLXpyriteTieEventElement: {
        prototype: HTMLXpyriteTieEventElement;
        new (): HTMLXpyriteTieEventElement;
    };
    interface HTMLXpyriteTieFileHeaderElement extends Components.XpyriteTieFileHeader, HTMLStencilElement {
    }
    var HTMLXpyriteTieFileHeaderElement: {
        prototype: HTMLXpyriteTieFileHeaderElement;
        new (): HTMLXpyriteTieFileHeaderElement;
    };
    interface HTMLXpyriteTieFlightGroupElement extends Components.XpyriteTieFlightGroup, HTMLStencilElement {
    }
    var HTMLXpyriteTieFlightGroupElement: {
        prototype: HTMLXpyriteTieFlightGroupElement;
        new (): HTMLXpyriteTieFlightGroupElement;
    };
    interface HTMLXpyriteTieGlobalGoalElement extends Components.XpyriteTieGlobalGoal, HTMLStencilElement {
    }
    var HTMLXpyriteTieGlobalGoalElement: {
        prototype: HTMLXpyriteTieGlobalGoalElement;
        new (): HTMLXpyriteTieGlobalGoalElement;
    };
    interface HTMLXpyriteTieGoalFgElement extends Components.XpyriteTieGoalFg, HTMLStencilElement {
    }
    var HTMLXpyriteTieGoalFgElement: {
        prototype: HTMLXpyriteTieGoalFgElement;
        new (): HTMLXpyriteTieGoalFgElement;
    };
    interface HTMLXpyriteTieMessageElement extends Components.XpyriteTieMessage, HTMLStencilElement {
    }
    var HTMLXpyriteTieMessageElement: {
        prototype: HTMLXpyriteTieMessageElement;
        new (): HTMLXpyriteTieMessageElement;
    };
    interface HTMLXpyriteTieMissionElement extends Components.XpyriteTieMission, HTMLStencilElement {
    }
    var HTMLXpyriteTieMissionElement: {
        prototype: HTMLXpyriteTieMissionElement;
        new (): HTMLXpyriteTieMissionElement;
    };
    interface HTMLXpyriteTieOrderElement extends Components.XpyriteTieOrder, HTMLStencilElement {
    }
    var HTMLXpyriteTieOrderElement: {
        prototype: HTMLXpyriteTieOrderElement;
        new (): HTMLXpyriteTieOrderElement;
    };
    interface HTMLXpyriteTiePostMissionQuestionsElement extends Components.XpyriteTiePostMissionQuestions, HTMLStencilElement {
    }
    var HTMLXpyriteTiePostMissionQuestionsElement: {
        prototype: HTMLXpyriteTiePostMissionQuestionsElement;
        new (): HTMLXpyriteTiePostMissionQuestionsElement;
    };
    interface HTMLXpyriteTiePreMissionQuestionsElement extends Components.XpyriteTiePreMissionQuestions, HTMLStencilElement {
    }
    var HTMLXpyriteTiePreMissionQuestionsElement: {
        prototype: HTMLXpyriteTiePreMissionQuestionsElement;
        new (): HTMLXpyriteTiePreMissionQuestionsElement;
    };
    interface HTMLXpyriteTieTagElement extends Components.XpyriteTieTag, HTMLStencilElement {
    }
    var HTMLXpyriteTieTagElement: {
        prototype: HTMLXpyriteTieTagElement;
        new (): HTMLXpyriteTieTagElement;
    };
    interface HTMLXpyriteTieTieStringElement extends Components.XpyriteTieTieString, HTMLStencilElement {
    }
    var HTMLXpyriteTieTieStringElement: {
        prototype: HTMLXpyriteTieTieStringElement;
        new (): HTMLXpyriteTieTieStringElement;
    };
    interface HTMLXpyriteTieTriggerElement extends Components.XpyriteTieTrigger, HTMLStencilElement {
    }
    var HTMLXpyriteTieTriggerElement: {
        prototype: HTMLXpyriteTieTriggerElement;
        new (): HTMLXpyriteTieTriggerElement;
    };
    interface HTMLXpyriteTieWayptElement extends Components.XpyriteTieWaypt, HTMLStencilElement {
    }
    var HTMLXpyriteTieWayptElement: {
        prototype: HTMLXpyriteTieWayptElement;
        new (): HTMLXpyriteTieWayptElement;
    };
    interface HTMLXpyriteXwFileHeaderElement extends Components.XpyriteXwFileHeader, HTMLStencilElement {
    }
    var HTMLXpyriteXwFileHeaderElement: {
        prototype: HTMLXpyriteXwFileHeaderElement;
        new (): HTMLXpyriteXwFileHeaderElement;
    };
    interface HTMLXpyriteXwFlightGroupElement extends Components.XpyriteXwFlightGroup, HTMLStencilElement {
    }
    var HTMLXpyriteXwFlightGroupElement: {
        prototype: HTMLXpyriteXwFlightGroupElement;
        new (): HTMLXpyriteXwFlightGroupElement;
    };
    interface HTMLXpyriteXwMissionElement extends Components.XpyriteXwMission, HTMLStencilElement {
    }
    var HTMLXpyriteXwMissionElement: {
        prototype: HTMLXpyriteXwMissionElement;
        new (): HTMLXpyriteXwMissionElement;
    };
    interface HTMLXpyriteXwObjectGroupElement extends Components.XpyriteXwObjectGroup, HTMLStencilElement {
    }
    var HTMLXpyriteXwObjectGroupElement: {
        prototype: HTMLXpyriteXwObjectGroupElement;
        new (): HTMLXpyriteXwObjectGroupElement;
    };
    interface HTMLXpyriteXwPilotFileElement extends Components.XpyriteXwPilotFile, HTMLStencilElement {
    }
    var HTMLXpyriteXwPilotFileElement: {
        prototype: HTMLXpyriteXwPilotFileElement;
        new (): HTMLXpyriteXwPilotFileElement;
    };
    interface HTMLElementTagNameMap {
        "ehtc-battle": HTMLEhtcBattleElement;
        "ehtc-battle-center": HTMLEhtcBattleCenterElement;
        "ehtc-battle-select": HTMLEhtcBattleSelectElement;
        "ehtc-member-select": HTMLEhtcMemberSelectElement;
        "ehtc-pilot": HTMLEhtcPilotElement;
        "pyrite-mission": HTMLPyriteMissionElement;
        "pyrite-mission-tabs": HTMLPyriteMissionTabsElement;
        "pyrite-mission-wrapper": HTMLPyriteMissionWrapperElement;
        "pyrite-pilot-file": HTMLPyritePilotFileElement;
        "pyrite-resource": HTMLPyriteResourceElement;
        "pyrite-resources": HTMLPyriteResourcesElement;
        "pyrite-tie-briefing": HTMLPyriteTieBriefingElement;
        "pyrite-tie-flightgroup": HTMLPyriteTieFlightgroupElement;
        "pyrite-tie-flightgroups": HTMLPyriteTieFlightgroupsElement;
        "pyrite-tie-message": HTMLPyriteTieMessageElement;
        "pyrite-tie-messages": HTMLPyriteTieMessagesElement;
        "pyrite-tie-mission": HTMLPyriteTieMissionElement;
        "pyrite-tie-pre-mission-questions": HTMLPyriteTiePreMissionQuestionsElement;
        "pyrite-tie-score": HTMLPyriteTieScoreElement;
        "xpyrite-tie-briefing": HTMLXpyriteTieBriefingElement;
        "xpyrite-tie-event": HTMLXpyriteTieEventElement;
        "xpyrite-tie-file-header": HTMLXpyriteTieFileHeaderElement;
        "xpyrite-tie-flight-group": HTMLXpyriteTieFlightGroupElement;
        "xpyrite-tie-global-goal": HTMLXpyriteTieGlobalGoalElement;
        "xpyrite-tie-goal-fg": HTMLXpyriteTieGoalFgElement;
        "xpyrite-tie-message": HTMLXpyriteTieMessageElement;
        "xpyrite-tie-mission": HTMLXpyriteTieMissionElement;
        "xpyrite-tie-order": HTMLXpyriteTieOrderElement;
        "xpyrite-tie-post-mission-questions": HTMLXpyriteTiePostMissionQuestionsElement;
        "xpyrite-tie-pre-mission-questions": HTMLXpyriteTiePreMissionQuestionsElement;
        "xpyrite-tie-tag": HTMLXpyriteTieTagElement;
        "xpyrite-tie-tie-string": HTMLXpyriteTieTieStringElement;
        "xpyrite-tie-trigger": HTMLXpyriteTieTriggerElement;
        "xpyrite-tie-waypt": HTMLXpyriteTieWayptElement;
        "xpyrite-xw-file-header": HTMLXpyriteXwFileHeaderElement;
        "xpyrite-xw-flight-group": HTMLXpyriteXwFlightGroupElement;
        "xpyrite-xw-mission": HTMLXpyriteXwMissionElement;
        "xpyrite-xw-object-group": HTMLXpyriteXwObjectGroupElement;
        "xpyrite-xw-pilot-file": HTMLXpyriteXwPilotFileElement;
    }
}
declare namespace LocalJSX {
    interface EhtcBattle {
        "battle"?: Battle;
        "code"?: string;
        "onDownloadBattle"?: (event: CustomEvent<Battle>) => void;
    }
    interface EhtcBattleCenter {
    }
    interface EhtcBattleSelect {
        "domain"?: string;
        "name"?: string;
        "value"?: string;
    }
    interface EhtcMemberSelect {
        "domain"?: string;
        "mode"?: "character" | "pilot";
        "name"?: string;
        "value"?: string;
    }
    interface EhtcPilot {
        "pin"?: number;
        "secondary"?: boolean;
    }
    interface PyriteMission {
        "file"?: string;
        "name"?: string;
        "nr"?: string;
        "plt"?: string;
        "sub"?: string;
    }
    interface PyriteMissionTabs {
    }
    interface PyriteMissionWrapper {
        "file"?: string;
    }
    interface PyritePilotFile {
        "bsf"?: string;
        "file"?: string;
    }
    interface PyriteResource {
        "name"?: string;
    }
    interface PyriteResources {
    }
    interface PyriteTieBriefing {
        "mission"?: Mission;
    }
    interface PyriteTieFlightgroup {
        "flightGroup"?: FlightGroup;
    }
    interface PyriteTieFlightgroups {
        "mission"?: Mission;
    }
    interface PyriteTieMessage {
        "message"?: Message;
    }
    interface PyriteTieMessages {
        "mission"?: Mission;
    }
    interface PyriteTieMission {
        "file"?: string;
    }
    interface PyriteTiePreMissionQuestions {
        "mission"?: Mission;
    }
    interface PyriteTieScore {
        "mission"?: Mission;
    }
    interface XpyriteTieBriefing {
        "briefing"?: Briefing;
    }
    interface XpyriteTieEvent {
        "event"?: Event;
    }
    interface XpyriteTieFileHeader {
        "fileheader"?: FileHeader;
    }
    interface XpyriteTieFlightGroup {
        "flightgroup"?: FlightGroup;
    }
    interface XpyriteTieGlobalGoal {
        "globalgoal"?: GlobalGoal;
    }
    interface XpyriteTieGoalFg {
        "goalfg"?: GoalFG;
    }
    interface XpyriteTieMessage {
        "message"?: Message;
    }
    interface XpyriteTieMission {
        "mission"?: Mission;
    }
    interface XpyriteTieOrder {
        "order"?: Order;
    }
    interface XpyriteTiePostMissionQuestions {
        "postmissionquestions"?: PostMissionQuestions;
    }
    interface XpyriteTiePreMissionQuestions {
        "premissionquestions"?: PreMissionQuestions;
    }
    interface XpyriteTieTag {
        "tag"?: Tag;
    }
    interface XpyriteTieTieString {
        "tiestring"?: TIEString;
    }
    interface XpyriteTieTrigger {
        "trigger"?: Trigger;
    }
    interface XpyriteTieWaypt {
        "waypt"?: Waypt;
    }
    interface XpyriteXwFileHeader {
        "fileheader"?: FileHeader;
    }
    interface XpyriteXwFlightGroup {
        "flightgroup"?: FlightGroup;
    }
    interface XpyriteXwMission {
        "mission"?: Mission;
    }
    interface XpyriteXwObjectGroup {
        "objectgroup"?: ObjectGroup;
    }
    interface XpyriteXwPilotFile {
        "pilotfile"?: PilotFile;
    }
    interface IntrinsicElements {
        "ehtc-battle": EhtcBattle;
        "ehtc-battle-center": EhtcBattleCenter;
        "ehtc-battle-select": EhtcBattleSelect;
        "ehtc-member-select": EhtcMemberSelect;
        "ehtc-pilot": EhtcPilot;
        "pyrite-mission": PyriteMission;
        "pyrite-mission-tabs": PyriteMissionTabs;
        "pyrite-mission-wrapper": PyriteMissionWrapper;
        "pyrite-pilot-file": PyritePilotFile;
        "pyrite-resource": PyriteResource;
        "pyrite-resources": PyriteResources;
        "pyrite-tie-briefing": PyriteTieBriefing;
        "pyrite-tie-flightgroup": PyriteTieFlightgroup;
        "pyrite-tie-flightgroups": PyriteTieFlightgroups;
        "pyrite-tie-message": PyriteTieMessage;
        "pyrite-tie-messages": PyriteTieMessages;
        "pyrite-tie-mission": PyriteTieMission;
        "pyrite-tie-pre-mission-questions": PyriteTiePreMissionQuestions;
        "pyrite-tie-score": PyriteTieScore;
        "xpyrite-tie-briefing": XpyriteTieBriefing;
        "xpyrite-tie-event": XpyriteTieEvent;
        "xpyrite-tie-file-header": XpyriteTieFileHeader;
        "xpyrite-tie-flight-group": XpyriteTieFlightGroup;
        "xpyrite-tie-global-goal": XpyriteTieGlobalGoal;
        "xpyrite-tie-goal-fg": XpyriteTieGoalFg;
        "xpyrite-tie-message": XpyriteTieMessage;
        "xpyrite-tie-mission": XpyriteTieMission;
        "xpyrite-tie-order": XpyriteTieOrder;
        "xpyrite-tie-post-mission-questions": XpyriteTiePostMissionQuestions;
        "xpyrite-tie-pre-mission-questions": XpyriteTiePreMissionQuestions;
        "xpyrite-tie-tag": XpyriteTieTag;
        "xpyrite-tie-tie-string": XpyriteTieTieString;
        "xpyrite-tie-trigger": XpyriteTieTrigger;
        "xpyrite-tie-waypt": XpyriteTieWaypt;
        "xpyrite-xw-file-header": XpyriteXwFileHeader;
        "xpyrite-xw-flight-group": XpyriteXwFlightGroup;
        "xpyrite-xw-mission": XpyriteXwMission;
        "xpyrite-xw-object-group": XpyriteXwObjectGroup;
        "xpyrite-xw-pilot-file": XpyriteXwPilotFile;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ehtc-battle": LocalJSX.EhtcBattle & JSXBase.HTMLAttributes<HTMLEhtcBattleElement>;
            "ehtc-battle-center": LocalJSX.EhtcBattleCenter & JSXBase.HTMLAttributes<HTMLEhtcBattleCenterElement>;
            "ehtc-battle-select": LocalJSX.EhtcBattleSelect & JSXBase.HTMLAttributes<HTMLEhtcBattleSelectElement>;
            "ehtc-member-select": LocalJSX.EhtcMemberSelect & JSXBase.HTMLAttributes<HTMLEhtcMemberSelectElement>;
            "ehtc-pilot": LocalJSX.EhtcPilot & JSXBase.HTMLAttributes<HTMLEhtcPilotElement>;
            "pyrite-mission": LocalJSX.PyriteMission & JSXBase.HTMLAttributes<HTMLPyriteMissionElement>;
            "pyrite-mission-tabs": LocalJSX.PyriteMissionTabs & JSXBase.HTMLAttributes<HTMLPyriteMissionTabsElement>;
            "pyrite-mission-wrapper": LocalJSX.PyriteMissionWrapper & JSXBase.HTMLAttributes<HTMLPyriteMissionWrapperElement>;
            "pyrite-pilot-file": LocalJSX.PyritePilotFile & JSXBase.HTMLAttributes<HTMLPyritePilotFileElement>;
            "pyrite-resource": LocalJSX.PyriteResource & JSXBase.HTMLAttributes<HTMLPyriteResourceElement>;
            "pyrite-resources": LocalJSX.PyriteResources & JSXBase.HTMLAttributes<HTMLPyriteResourcesElement>;
            "pyrite-tie-briefing": LocalJSX.PyriteTieBriefing & JSXBase.HTMLAttributes<HTMLPyriteTieBriefingElement>;
            "pyrite-tie-flightgroup": LocalJSX.PyriteTieFlightgroup & JSXBase.HTMLAttributes<HTMLPyriteTieFlightgroupElement>;
            "pyrite-tie-flightgroups": LocalJSX.PyriteTieFlightgroups & JSXBase.HTMLAttributes<HTMLPyriteTieFlightgroupsElement>;
            "pyrite-tie-message": LocalJSX.PyriteTieMessage & JSXBase.HTMLAttributes<HTMLPyriteTieMessageElement>;
            "pyrite-tie-messages": LocalJSX.PyriteTieMessages & JSXBase.HTMLAttributes<HTMLPyriteTieMessagesElement>;
            "pyrite-tie-mission": LocalJSX.PyriteTieMission & JSXBase.HTMLAttributes<HTMLPyriteTieMissionElement>;
            "pyrite-tie-pre-mission-questions": LocalJSX.PyriteTiePreMissionQuestions & JSXBase.HTMLAttributes<HTMLPyriteTiePreMissionQuestionsElement>;
            "pyrite-tie-score": LocalJSX.PyriteTieScore & JSXBase.HTMLAttributes<HTMLPyriteTieScoreElement>;
            "xpyrite-tie-briefing": LocalJSX.XpyriteTieBriefing & JSXBase.HTMLAttributes<HTMLXpyriteTieBriefingElement>;
            "xpyrite-tie-event": LocalJSX.XpyriteTieEvent & JSXBase.HTMLAttributes<HTMLXpyriteTieEventElement>;
            "xpyrite-tie-file-header": LocalJSX.XpyriteTieFileHeader & JSXBase.HTMLAttributes<HTMLXpyriteTieFileHeaderElement>;
            "xpyrite-tie-flight-group": LocalJSX.XpyriteTieFlightGroup & JSXBase.HTMLAttributes<HTMLXpyriteTieFlightGroupElement>;
            "xpyrite-tie-global-goal": LocalJSX.XpyriteTieGlobalGoal & JSXBase.HTMLAttributes<HTMLXpyriteTieGlobalGoalElement>;
            "xpyrite-tie-goal-fg": LocalJSX.XpyriteTieGoalFg & JSXBase.HTMLAttributes<HTMLXpyriteTieGoalFgElement>;
            "xpyrite-tie-message": LocalJSX.XpyriteTieMessage & JSXBase.HTMLAttributes<HTMLXpyriteTieMessageElement>;
            "xpyrite-tie-mission": LocalJSX.XpyriteTieMission & JSXBase.HTMLAttributes<HTMLXpyriteTieMissionElement>;
            "xpyrite-tie-order": LocalJSX.XpyriteTieOrder & JSXBase.HTMLAttributes<HTMLXpyriteTieOrderElement>;
            "xpyrite-tie-post-mission-questions": LocalJSX.XpyriteTiePostMissionQuestions & JSXBase.HTMLAttributes<HTMLXpyriteTiePostMissionQuestionsElement>;
            "xpyrite-tie-pre-mission-questions": LocalJSX.XpyriteTiePreMissionQuestions & JSXBase.HTMLAttributes<HTMLXpyriteTiePreMissionQuestionsElement>;
            "xpyrite-tie-tag": LocalJSX.XpyriteTieTag & JSXBase.HTMLAttributes<HTMLXpyriteTieTagElement>;
            "xpyrite-tie-tie-string": LocalJSX.XpyriteTieTieString & JSXBase.HTMLAttributes<HTMLXpyriteTieTieStringElement>;
            "xpyrite-tie-trigger": LocalJSX.XpyriteTieTrigger & JSXBase.HTMLAttributes<HTMLXpyriteTieTriggerElement>;
            "xpyrite-tie-waypt": LocalJSX.XpyriteTieWaypt & JSXBase.HTMLAttributes<HTMLXpyriteTieWayptElement>;
            "xpyrite-xw-file-header": LocalJSX.XpyriteXwFileHeader & JSXBase.HTMLAttributes<HTMLXpyriteXwFileHeaderElement>;
            "xpyrite-xw-flight-group": LocalJSX.XpyriteXwFlightGroup & JSXBase.HTMLAttributes<HTMLXpyriteXwFlightGroupElement>;
            "xpyrite-xw-mission": LocalJSX.XpyriteXwMission & JSXBase.HTMLAttributes<HTMLXpyriteXwMissionElement>;
            "xpyrite-xw-object-group": LocalJSX.XpyriteXwObjectGroup & JSXBase.HTMLAttributes<HTMLXpyriteXwObjectGroupElement>;
            "xpyrite-xw-pilot-file": LocalJSX.XpyriteXwPilotFile & JSXBase.HTMLAttributes<HTMLXpyriteXwPilotFileElement>;
        }
    }
}
